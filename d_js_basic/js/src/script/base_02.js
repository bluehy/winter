// base_02.js

// console.log("base_02.js 연결완료");
// 
// console.log(10+10);  // => 숫자 + 숫자 : 숫자
// console.log("10"+10);// => 문자 + 숫자 : 문자 => 나열
// console.log("10"+"10");// => 문자 + 문자 : 문자 => 나열

// js에서는 다양한 형타입이 존재
// 숫자는 따옴표를 붙이지 않는다.
// 문자는 따옴표를 붙인다. (js는 쌍따옴표, 홑따옴표의 구분을 하지 않는다.)
// 단,  따옴표의 시작과 끝의 모양이 같아야 한다. (' ') | (" ") | ` ` (의미가 좀 다름)

// 따옴표를 사용하지 않는 문자도 존재. -> 변수, 함수, 객체. 배열 등의 기능을 가진 것.

// var 낄끼빠빠 = "낄 때 끼고 빠질 때 빠져라.";
// console.log(낄끼빠빠);

var coffee = "인생의 쓴맛, 이걸 왜 먹지? 각성하기위한 포션, 더위사냥";
// console.log(coffee);

     coffee = "후식, 오늘 하루를 무사히 버틸 수 있게 내일의 체력을 끌어오는 각성제";
console.log(coffee);

// 변수 
// 1. 변하는 수라는 뜻으로, 하나의 기능 또는 내용을 요약해서 담고 있는 형태.
// 2. 상황에 따라 그 내용이 변할 수 있다. 
// 3. 특정한 기능을 담을 수 있다. (단, js외 다른 언어에서는 변수에 기능을 담을 수 X)
// 4. 변하지 않는 수는 상수라고 부른다. (최초 등록값만 인지)
// 5. 변수는 최초에 한번 var라고 선언한다. 이후 동일한 변수를 수정시에는 var 생략가능.
//----*. 2015년 이후, ECMA2015(es6)버전이 등장하면서, var변수 대신 const, let을 이용한 변수가 등장.

// ";" 작성하는 곳 : 세미콜론의 의미는 기능 종료를 뜻함. (부분이 아닌, 해당 라인 전체의 기능 종료)
// 변수 선언 후 마지막,   => var coffee =(대입하다) "dsdfsdf";
// 함수 또는 메소드 기능 마지막에 작성.   => log(); | setInterval().log();

// (10 == "10") : 형타입은 구분하지 않고, 값만 구분 (10과 "10"은 같다.)
// (10 === "10") : 형타입까지 구분하여 비교함. (10과 "10"은 다르다. 정확하게 일치하지 않는다.)
